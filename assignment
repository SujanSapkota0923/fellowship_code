**This codebase is a website for blog posting where user can comment,post blogs, and view blogs.**
---
using postgresql for database, account login is working now
![filestructure](/materials/frontend.png)


```
PORT=3000
DB_PORT=5432
DB_HOST=localhost
DB_USER=hellodb
DB_PASSWORD=sujann
DB_NAME=sujann
DB_CLIENT=pg
NODE_ENV=local
CLERK_PUBLISHABLE_KEY=pk_test_Z2xvcmlvdXMtaGlwcG8tOTUuY2xlcmsuYWNjb3VudHMuZGV2JA
CLERK_SECRET_KEY=sk_test_eZkgVBAET99no1FRklHrPmIGFgMvh2egdIvFxCZQbL 
```
used clerk as api

![filestructure](/materials/frontend.png)

React Router manages navigation in our application by mapping different URL paths to specific components. The app starts from index.html, where the App component is rendered and handles all routing. Navigating to `/ redirects` to the blogs list at `/blogs`, which loads the AllBlogs component. This component fetches all blog posts using a custom useAllBlogs hook and displays them. Visiting `/blog/:id `loads the SingleBlog component, which uses hooks like u`seBlog`, `useBlogComments`, and `useUserById` to fetch blog details, comments, and author info. If a user goes to `/blog/create`, the CreateBlog component checks if the user is authenticated using Clerk. If not, it shows a login prompt. If authenticated, it either prompts the user to complete their profile or lets them submit a new blog using a rich text editor. Each route is dynamically handled in a single-page application flow using Router, Routes, and Route components, making the experience seamless and interactive.


![filestructure](/materials/final.png)

in this way now we are able to create any blogs..
the blogs can be created only when the user is logged in.


