name: FULL STACK DEVELOPMENT

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

permissions:
  contents: write

jobs:
  backend:
    name: Backend + Frontend Build and Push
    runs-on: label1  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install and Build Backend1
        run: |
          cd code/backend1
          yarn install
          yarn build

      - name: Install and Build Backend2
        run: |
          cd code/backend2
          yarn install
          yarn build

      - name: Install and Build Frontend
        run: |
          cd code/frontend
          yarn install
          yarn build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend1 Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/backend1
          file: ./code/backend1/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/backend1:latest
            ${{ secrets.DOCKER_USERNAME }}/backend1:${{ github.sha }}

      - name: Build and Push Backend2 Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/backend2
          file: ./code/backend2/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/backend2:latest
            ${{ secrets.DOCKER_USERNAME }}/backend2:${{ github.sha }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/frontend
          file: ./code/frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}


  deploy:
    name: Deploy to Remote VM
    runs-on: label2  #runs on fedora
    needs: backend
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend1:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend2:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest

            docker stop backend1 || true && docker rm backend1 || true
            docker stop backend2 || true && docker rm backend2 || true
            docker stop frontend || true && docker rm frontend || true

            docker run -d --name backend1 -p 3001:3000 ${{ secrets.DOCKER_USERNAME }}/backend1:latest
            docker run -d --name backend2 -p 3002:3000 ${{ secrets.DOCKER_USERNAME }}/backend2:latest
            docker run -d --name frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  release:
    name: Create GitHub Release
    needs: backend
    runs-on: label1  
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ github.sha }}
          name: Release ${{ github.sha }}
          body: |
            Automated release from GitHub Actions.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
