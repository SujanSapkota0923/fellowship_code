name: FULL STACK DEVELOPMENT

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

permissions:
  contents: write

jobs:
  backend:
    name: Backend + Frontend Build and Push
    runs-on: label1  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
    # this searches for caching
      - name: Cache Backend1
        uses: actions/cache@v3
        with:
          path: /Users/sujan/Library/Caches/Yarn/v6
          key: ${{ runner.os }}-backend1-yarn-${{ hashFiles('code/backend1/yarn.lock') }}

      - name: Install backend1 dependencies
        run: |
          cd code/backend1
          yarn install

      - name: Build Backend1
        run: |
          cd code/backend1
          yarn build
        # this uploads to the cache
      - name: Upload backend1 build
        uses: actions/upload-artifact@v4
        with:
          name: backend1-build
          path: code/backend1/dist
  
      - name: Cache Backend2
        uses: actions/cache@v3
        with:
          path: /Users/sujan/Library/Caches/Yarn/v6
          key: ${{ runner.os }}-backend2-yarn-${{ hashFiles('code/backend2/yarn.lock') }}

      - name: Install backend2 dependencies
        run: |
          cd code/backend2
          yarn install

      - name: Build Backend2
        run: |
          cd code/backend2
          yarn build

      - name: Upload backend2 build
        uses: actions/upload-artifact@v4
        with:
          name: backend2-build
          path: code/backend2/dist


      - name: Cache frontend
        uses: actions/cache@v3
        with:
          path: /Users/sujan/Library/Caches/Yarn/v6
          key: ${{ runner.os }}-frontend-yarn-${{ hashFiles('code/frontend/yarn.lock') }}

      - name: Install frontend dependencies
        run: |
          cd code/frontend
          yarn install

      - name: Build frontend
        run: |
          cd code/frontend
          yarn build

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build

          path: code/frontend/dist
      

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend1 Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/backend1
          file: ./code/backend1/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/backend1:latest
            ${{ secrets.DOCKER_USERNAME }}/backend1:${{ github.sha }}

      - name: Build and Push Backend2 Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/backend2
          file: ./code/backend2/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/backend2:latest
            ${{ secrets.DOCKER_USERNAME }}/backend2:${{ github.sha }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./code/frontend
          file: ./code/frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}


  deploy:
    name: Deploy to Self (Fedora VM)
    runs-on: label2
    needs: backend
    steps:
      - name: Pull and Run Docker Containers
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/backend1:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/backend2:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
  
          docker stop backend1 || true && docker rm backend1 || true
          docker stop backend2 || true && docker rm backend2 || true
          docker stop frontend || true && docker rm frontend || true
  
          docker run -d --name backend1 -p 3001:3000 ${{ secrets.DOCKER_USERNAME }}/backend1:latest
          docker run -d --name backend2 -p 3002:3000 ${{ secrets.DOCKER_USERNAME }}/backend2:latest
          docker run -d --name frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/frontend:latest
  
  release:
    name: Create github release
    needs: backend
    runs-on: label1  
    steps:
      - name: create github release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ github.sha }}
          name: Release ${{ github.sha }}
          body: |
            Automated release from GitHub Actions.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
